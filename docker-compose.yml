version: "3.1"
services:

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}_redis
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - app-network

  postgres:
    image: postgres:9.5-alpine
    container_name: ${PROJECT_NAME}_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: ${PROJECT_NAME}_webserver
    working_dir: /application
    volumes:
      - ./application:/application
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - ${WEBSERVER_PORT}:80
    networks:
      - app-network
    depends_on:
      - redis

  php-fpm:
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    container_name: ${PROJECT_NAME}_php_fpm
    working_dir: /application
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - PROJECT_NAME=${PROJECT_NAME}
      - REDIS_PORT=${REDIS_PORT}
    volumes:
      - ./application:/application
      - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.1/fpm/conf.d/99-overrides.ini
    networks:
      - app-network
    depends_on:
      - redis
      - postgres

networks:
  app-network:
    driver: "bridge"